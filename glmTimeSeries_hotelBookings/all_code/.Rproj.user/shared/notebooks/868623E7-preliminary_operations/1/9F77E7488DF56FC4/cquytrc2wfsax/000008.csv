"0","library(glmnet)"
"0","df.Lasso <- glmnet(datos_train_x, as.factor(datos_train_y), alpha = 1.0, family = ""binomial"")"
"0","prob <- predict(df.Lasso, newx = datos_train_x, type = ""response"")"
"0","res <- c()"
"0","for (j in 1:ncol(prob)){"
"0","  for (i in 1:length(searchgrid))"
"0","  {"
"0","    pcut <- result[i,1]"
"0","    #assign the cost to the 2nd col"
"0","    result[i,2] <- cost1(df.train$IsCanceled, prob[,j])"
"0","  }"
"0","##plot(result, ylab = ""Cost in Training Set"")"
"0","res <- c(res,as.double(result[which.min(result[,2]),][2]))"
"0","}"
"0","which(res == min(res))[1]"
"1","[1]"
"1"," 98"
"1","
"
"0","result = cbind(searchgrid, NA)"
"0","for (i in 1:length(searchgrid))"
"0","  {"
"0","    pcut <- result[i,1]"
"0","    #assign the cost to the 2nd col (which(res == min(res))[1])"
"0","    result[i,2] <- cost1(df.train$IsCanceled, prob[,98])"
"0","  }"
"0","plot(result, ylab = ""Cost in Training Set"")"
